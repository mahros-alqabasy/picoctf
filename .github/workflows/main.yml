name: Build and Release .deb Package

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-deb:
    name: Build Debian Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y dpkg-dev debhelper fakeroot

      - name: Prepare Debian package structure
        run: |
          mkdir -p pkg/DEBIAN
          cat <<EOF > pkg/DEBIAN/control
          Package: picoctf
          Version: 1.0.0
          Section: base
          Priority: optional
          Architecture: all
          Depends: bash
          Maintainer: Your Name <your.email@example.com>
          Description: A sample picoCTF package
          EOF

      - name: Build .deb package
        run: |
          mkdir -p build/pkg
          dpkg-deb --build pkg build/pkg/picoctf.deb

      - name: Upload Debian package artifact
        uses: actions/upload-artifact@v4
        with:
          name: picoctf-deb
          path: build/pkg/picoctf.deb

  release:
    name: Create GitHub Release
    needs: build-deb
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/main')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate a tag for the new release
        run: |
          TAG_NAME="v$(date +'%Y.%m.%d-%H%M%S')"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Download Debian package artifact
        uses: actions/download-artifact@v4
        with:
          name: picoctf-deb
          path: build/pkg

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: build/pkg/picoctf.deb
          body: "ðŸš€ New Debian package release: **${{ env.TAG_NAME }}**"
          draft: false
          prerelease: false
